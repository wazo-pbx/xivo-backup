#!/usr/bin/python

# -*- coding: utf-8 -*-
# Copyright (C) 2015 Avencall
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>

import argparse
import json
import sys

from consul import Consul

TOKEN_FILE = '/var/lib/consul/master_token'


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-H',
                        '--host',
                        action='store',
                        default='localhost',
                        help="Consul host name. Default: %(default)s")
    parser.add_argument('-p',
                        '--port',
                        action='store',
                        default=8500,
                        type=int,
                        help="Consul port. Default: %(default)s")
    parser.add_argument('-t',
                        '--token',
                        action='store',
                        help="Consul token. Default: taken from {token_file}".format(token_file=TOKEN_FILE))
    parser.add_argument('-i',
                        '--input',
                        action='store',
                        help="File where to read the input. Default: stdin")
    args = parser.parse_args()
    args.token = args.token or read_token_file()

    with (open(args.input, 'r') if args.input else sys.stdin) as input_:
        consul_data = json.loads(input_.read())

    consul_kv = consul_data[1] or []

    consul = Consul(host=args.host, port=args.port, token=args.token)
    for kv in consul_kv:
        consul.kv.put(encode_utf8(kv['Key']), encode_utf8(kv['Value']), flags=encode_utf8(kv['Flags']))


def read_token_file():
    with open(TOKEN_FILE, 'r') as token_file:
        token = token_file.read().strip()
    return token


def encode_utf8(value):
    if isinstance(value, unicode):
        return value.encode('utf-8')
    return value


if __name__ == '__main__':
    main()
