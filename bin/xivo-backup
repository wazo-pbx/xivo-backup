#!/bin/sh
# Copyright (C) 2015 Avencall
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>

PATH=/usr/sbin:/usr/bin:/sbin:/bin
BACKUP_TYPE=$1
if [ -z "${BACKUP_TYPE}" ]; then
    echo "Please give backup type" >&2
    exit 1
fi
BACKUP_FILE=$2
if [ -z "${BACKUP_FILE}" ]; then
    echo "Please give backup file" >&2
    exit 1
fi

renice 19 "$$" >/dev/null
ionice -c 3 -p "$$"

[ -e /etc/xivo/common.conf ] && . /etc/xivo/common.conf
DEFAULT_MAX_SOUND_FILE_SIZE=10M
DEFAULT_MAX_FILES_PER_SOUND_DIR=100
XIVO_VERSION=$(LANG="C" apt-cache policy xivo | grep Installed | grep -oE '([0-9]{2}\.[0-9]+|1\.2\.[0-9]{1,2})' | head -n1)
BACKUP_FILE=${BACKUP_FILE}.tgz


case "${BACKUP_TYPE}" in
  data)
    BACKUP_LIST="/etc/asterisk/
                 /etc/dahdi/
                 /etc/dhcp/
                 /etc/hostname
                 /etc/hosts
                 /etc/ldap/
                 /etc/network/if-up.d/xivo-routes
                 /etc/network/interfaces
                 /etc/ntp.conf
                 /etc/xivo/
                 /etc/xivo-agentd
                 /etc/xivo-agid
                 /etc/xivo-amid
                 /etc/xivo-auth
                 /etc/xivo-call-logd
                 /etc/xivo-confd
                 /etc/xivo-confgend-client
                 /etc/xivo-ctid
                 /etc/xivo-dird
                 /etc/xivo-dxtora
                 /etc/xivo-purge-db
                 /etc/resolv.conf
                 /etc/ssl/
                 /etc/wanpipe/
                 /var/lib/asterisk/
                 /var/lib/consul/
                 /var/lib/xivo/
                 /var/lib/xivo-provd/
                 /var/log/asterisk/
                 /var/spool/asterisk/
                 /usr/local/sbin/
                 /usr/share/xivo/XIVO-VERSION"
    FILTER_DIRS="/var/lib/xivo/sounds
                 /var/lib/asterisk/sounds/custom
                 /var/lib/asterisk/moh
                 /var/spool/asterisk/voicemail
                 /var/spool/asterisk/monitor"
    EXCLUDE_FILES="/var/lib/xivo-provd/plugins/*/var/cache/*
                   /var/spool/asterisk/monitor
                   /var/spool/asterisk/meetme"

    # backup existing directories only
    WOULD_BACKUP=
    for FILE in ${BACKUP_LIST}; do
        if [ -e "/${FILE}" ]; then
            WOULD_BACKUP="${WOULD_BACKUP} ${FILE}"
        fi
    done

    # exclude files from backup
    EXCL_FILE=$(mktemp)
    for FILE in ${EXCLUDE_FILES}; do
        if [ -e ${FILE} ]; then
            echo ${FILE} >>${EXCL_FILE}
        fi
    done
    # filter out known heavy logs
    ls /var/log/asterisk/debug* >>${EXCL_FILE} 2>/dev/null
    ls /var/log/asterisk/full* >>${EXCL_FILE} 2>/dev/null
    # filter out core files
    ls /var/spool/asterisk/core.* >>${EXCL_FILE} 2>/dev/null
    # filter out heavy sound files
    MAX_SIZE=${XIVO_BACKUP_MAX_SOUND_FILE_SIZE:-${DEFAULT_MAX_SOUND_FILE_SIZE}}
    find ${FILTER_DIRS} -type f -size +${MAX_SIZE} -print >>${EXCL_FILE} 2>/dev/null
    # filter out sound directories with too much files
    MAX_FILES=${XIVO_BACKUP_MAX_FILES_PER_SOUND_DIR:-${DEFAULT_MAX_FILES_PER_SOUND_DIR}}
    for D in $(find ${FILTER_DIRS} -mindepth 1 -type d 2>/dev/null); do
        COUNT=$(ls -1A ${D} | wc -l)
        if [ ${COUNT} -gt ${MAX_FILES} ]; then
            echo ${D} >>${EXCL_FILE}
        fi
    done
    # remove leading slash in exclud list ...
    sed -i -r 's#(^| )/#\1#g' ${EXCL_FILE}

    # ... as well as in backup list
    TAR_WOULD_BACKUP=$(echo "${WOULD_BACKUP}" | sed -r 's#(^| )/#\1#g')
    tar cpzf ${BACKUP_FILE} -C / --exclude-from=${EXCL_FILE} --ignore-failed-read ${TAR_WOULD_BACKUP} >/dev/null

    rm -rf ${EXCL_FILE}
    ;;
  db)
    TMPDIR=$(mktemp -d)
    PG_DIR=pg-backup
    PG_TMPDIR=${TMPDIR}/${PG_DIR}
    mkdir ${PG_TMPDIR}

    cd /var/lib/postgresql
    sudo -u postgres pg_dump -Fc asterisk > ${PG_TMPDIR}/asterisk-${XIVO_VERSION}.dump
    cd ${OLDPWD}

    tar cpzf ${BACKUP_FILE} -C ${TMPDIR} ${PG_DIR}
    rm -r ${TMPDIR}
    ;;
  *)
    echo "Unknown backup type" >&2
    exit 1
    ;;
esac
